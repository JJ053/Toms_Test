name: Web Build and Release
on:
  push:
  
jobs:
  web-build:
    
    runs-on: windows-latest

    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
      with: 
        ref: main
        submodules: true
        sparse-checkout: |
          subrepos/WebPlugins/src/back-end/front-end/packages

    - name: Nvm Install
      
      shell: powershell
      run: |
        Invoke-WebRequest -Uri "https://github.com/coreybutler/nvm-windows/releases/download/1.1.12/nvm-setup.zip" -OutFile "nvm-setup.zip"
        Expand-Archive -Path "nvm-setup.zip" -DestinationPath "nvm-install"
        Start-Process -FilePath "$env:RUNNER_TEMP\nvm-install\nvm-setup.exe" -ArgumentList "/S" -Wait -Verb RunAs
        $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
        
        nvm root C:\nvm
        nvm version

    - name: Node.23 Install
      run: |
        nvm install 23.1.0
        nvm use 23.1.0
    
    - name: Web Base Build
      run: |
        cd ./subrepos/WebPlugins/src/front-end/packages/IoTCenterWebBase
        nvm --version

        npm install pnpm -g
        pnpm install --no-frozen-lockfile
        pnpm build
        cd $GITHUB_WORKSPACE

    - name: Web Base Publish
      run: |
        cd ./release
        Copy-Item -Path ../subrepos/WebPlugins/src/front-end/packages/IoTCenterWebBase/dist/* -Destination ./IoTCenterWeb/publish/wwwroot/ -Recurse -Force
        cd ..
      shell: pwsh

    - name: Node.14 Install
      run: |
        nvm install 14.21.3
        nvm use 14.21.3    

    - name: Web Plugins Build
      run: |
        cd ./subrepos/WebPlugins/src/front-end/packages/IoTCenterWebPlugin
        npm install
        npm run build-all
        cd $GITHUB_WORKSPACE

    - name: Web Plugins Publish
      run: |
        cd ./release
        if(Test-Path ../subrepos/WebPlugins/src/front-end/packages/IoTCenterWebPlugin/dist/static){
          Remove-Item ../subrepos/WebPlugins/src/front-end/packages/IoTCenterWebPlugin/dist/static
        }
        Copy-Item -Path ../subrepos/WebPlugins/src/front-end/packages/IoTCenterWebPlugin/dist/* -Destination ./IoTCenterWeb/publish/wwwroot/ -Recurse -Force
        cd ..
      shell: pwsh

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-web-${{ matrix.os }}
        path: ./release/*

  release-upload :
    needs: [create-release,host-build,api-build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./release

    - name: Zip(Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        rm -f release_${{ matrix.os }}.zip
        cd ./release
        zip -r ../release_${{ matrix.os }}.zip .
        cd $GITHUB_WORKSPACE
      shell: bash

    - name: Zip(Windows)
      if: matrix.os == 'windows-latest'
      run: |
        if(Test-Path release_${{ matrix.os }}.zip){
          Remove-Item release_${{ matrix.os }}.zip
        }
        cd ./release
        Compress-Archive -Path * -DestinationPath ../release_${{ matrix.os }}.zip -Force
        cd ..
      shell: powershell

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./release_${{ matrix.os }}.zip
        asset_name: ${{ runner.os }}_${{ runner.arch }}_${{ github.ref_name }}_release.zip
        asset_content_type: application/zip